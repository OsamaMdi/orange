SELECT c.customer_id, c.customer_name, o.order_id, o.order_date, o.shipping_date
FROM customers c
JOIN orders o
ON c.customer_id = o.customer_id;
1
----------------
Abdulnour Alzoubi — Today at 5:07 PM
2
SELECT p.product_id, p.product_name, od.order_detail_id, od.quantity, od.price
FROM products p
LEFT JOIN order_details od
ON p.product_id = od.product_id;

-----------------
Abdulnour Alzoubi — Today at 5:18 PM
3
SELECT e.employee_id, e.employee_name, d.department_name
FROM employees e
RIGHT JOIN departments d
ON e.department_id = d.department_id;

----------------
4
SELECT p.product_id, p.product_name, SUM(od.quantity * od.price) AS total_sales_amount
FROM products p
JOIN order_details od
ON p.product_id = od.product_id
GROUP BY p.product_id

---------------------
5
SELECT c.customer_name, p.product_name, od.quantity
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
JOIN order_details od ON o.order_id = od.order_id
JOIN products p ON od.product_id = p.product_id;

------------------
6
SELECT c.customer_id, c.customer_name, COUNT(o.order_id) AS total_orders
FROM customers c
JOIN orders o
ON c.customer_id = o.customer_id
GROUP BY c.customer_id, c.customer_name
HAVING total_orders >= 5;

------------------- 
7
SELECT e.employee_id, COALESCE(e.employee_name, "no emplyees"), ep.project_id, COALESCE(p.project_name, "no project")
FROM employees e
LEFT JOIN employee_projects ep
USING (employee_id)
LEFT JOIN projects p
USING (project_id)

UNION

SELECT e.employee_id, COALESCE(e.employee_name, "no emplyees"), ep.project_id, COALESCE(p.project_name, "no project")
FROM employees e
RIGHT JOIN employee_projects ep
USING (employee_id)
RIGHT JOIN projects p
USING (project_id);

----------------------
8
SELECT c.customer_id, c.customer_name, o.order_id, COUNT(c.customer_name) AS total_orders, o.order_date, o.shipping_date, 'Active' AS status
FROM customers c

JOIN orders o
ON c.customer_id = o.customer_id
WHERE c.status = 'active'
GROUP BY c.customer_name

UNION

SELECT c.customer_id, c.customer_name, o.order_id, COUNT(c.customer_name) AS total_orders, o.order_date, o.shipping_date, 'Inactive' AS status
FROM customers c
JOIN orders o
ON c.customer_id = o.customer_id
WHERE c.status = 'inactive'
GROUP BY c.customer_name;

------------------
9
SELECT o.order_id, o.order_date, o.shipping_date,
    CASE
        WHEN o.order_date IS NULL THEN 'Canceled'
        WHEN o.shipping_date > o.order_date THEN 'Shipped'
        ELSE 'Pending'
    END
    AS status
FROM orders o;

--------------------
