Task 1:
1.  creat databes School;
 USE   School;
2.
CREATE TABLE Students (
    StudentID INT AUTO_INCREMENT PRIMARY KEY,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    BirthDate DATE NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL
);

----------------------------------------------------------
  CREATE TABLE Teachers (
    TeacherID INT AUTO_INCREMENT PRIMARY KEY,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL
);
---------------------------------------------------------
CREATE TABLE Classes (
    ClassID INT AUTO_INCREMENT PRIMARY KEY,
    ClassName VARCHAR(100) NOT NULL,
    TeacherID INT NOT NULL,
    FOREIGN KEY (TeacherID) REFERENCES Teachers(TeacherID) ON DELETE CASCADE
);
---------------------------------------------------------
CREATE TABLE Enrollments (
    EnrollmentID INT AUTO_INCREMENT PRIMARY KEY,
    StudentID INT NOT NULL,
    ClassID INT NOT NULL,
    EnrollmentDate DATE NOT NULL,
    FOREIGN KEY (StudentID) REFERENCES Students(StudentID) ON DELETE CASCADE,
    FOREIGN KEY (ClassID) REFERENCES Classes(ClassID) ON DELETE CASCADE
);

3.

INSERT INTO students(FirstName, LastName, BirthDate, Email) VALUES
('Osama','madi','2002-03-29','Osama@gmail'),
('Ahmad','madi','1998-03-29','Ahmad@gmail'),
('Ayman','madi','1999-03-29','Ayman@gmail');
---------------------------------------------------------
SELECT classes.ClassName,teachers.FirstName,teachers.LastName
from classes
JOIN teachers ON classes.TeacherID = teachers.TeacherID;
---------------------------------------------------------
UPDATE teachers
SET Email = 'David@gmail.com'
WHERE Teacherid = 'John';
---------------------------------------------------------
DELETE FROM Enrollments
WHERE StudentID = 3;

Task 2:
1.craeat database Librarydb;
CREATE TABLE Books (
    BookID INT PRIMARY KEY AUTO_INCREMENT,
    Title VARCHAR(255) NOT NULL,
    AuthorID INT NOT NULL,
    Genre VARCHAR(100),
    Price DECIMAL(10, 2),
    PublicationDate DATE,
    FOREIGN KEY (AuthorID) REFERENCES Authors(AuthorID)
);
---------------------------------------------------------
CREATE TABLE Authors (
    AuthorID INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(255) NOT NULL,
    Country VARCHAR(100)
);
---------------------------------------------------------
CREATE TABLE Members (
    MemberID INT PRIMARY KEY AUTO_INCREMENT,
    FirstName VARCHAR(100) NOT NULL,
    LastName VARCHAR(100) NOT NULL,
    Email VARCHAR(255) UNIQUE NOT NULL,
    JoinDate DATE
);
---------------------------------------------------------
CREATE TABLE BorrowedBooks (
    BorrowID INT PRIMARY KEY AUTO_INCREMENT,
    BookID INT NOT NULL,
    MemberID INT NOT NULL,
    BorrowDate DATE NOT NULL,
    ReturnDate DATE,
    FOREIGN KEY (BookID) REFERENCES Books(BookID),
    FOREIGN KEY (MemberID) REFERENCES Members(MemberID)
);


2.
-INSERT INTO Books (Title, AuthorID, Genre, Price, PublicationDate)
VALUES ('The Great Gatsby', 1, 'Fiction', 15.99, '1925-04-10');
---------------------------------------------------------
-SELECT *
FROM Books
WHERE AuthorID = 1;
---------------------------------------------------------
-UPDATE books
SET price = 20.99
WHERE BookID = 2;
---------------------------------------------------------
-DELETE FROM Books
WHERE BookID = 3;
---------------------------------------------------------
-SELECT *
FROM Books
WHERE Genre = 'Science Fiction';
---------------------------------------------------------
-SELECT *FROM Books
WHERE (Genre = 'Fiction' && Price < 20)
   || AuthorID != 2;
---------------------------------------------------------
-SELECT * FROM Books
ORDER BY PublicationDate DESC;
---------------------------------------------------------
-SELECT MIN(Price) AS MinPrice, MAX(Price) AS MaxPrice
FROM Books;
---------------------------------------------------------
-SELECT COUNT(*) AS TotalBooks, AVG(Price) AS averageprice, SUM(Price) AS totalPrice
FROM Books;
---------------------------------------------------------
-SELECT * FROM Books
WHERE Title LIKE 'The%';
---------------------------------------------------------
-SELECT Genre, COUNT(*) AS BookCount
FROM Books
GROUP BY Genre;
---------------------------------------------------------
-SELECT books.Title , authors.Name AS authorName
FROM books
JOIN authors on books.AuthorID = authors.AuthorID; 

Task3:
---------------------------------------------------------
-INSERT INTO Members (MemberID, FirstName, LastName, Email, JoinDate) VALUES
(1, 'John', 'Doe', 'john.doe@example.com', '2022-12-15'),
(2, 'Jane', 'Smith', 'jane.smith@library.com', '2023-02-10'),
(3, 'Emily', 'Johnson', 'emily.j@example.com', '2023-03-05'),
(4, 'Michael', 'Brown', 'michael.b@library.com', '2023-04-12'),
(5, 'Sarah', 'Davis', 'sarah.d@example.com', '2023-06-21');

---------------------------------------------------------
-INSERT INTO BorrowedBooks (BorrowID, BookID, MemberID, BorrowDate, ReturnDate) VALUES
(1, 1, 2, '2023-02-11', '2023-02-18'),
(2, 2, 2, '2023-02-20', '2023-02-27'),
(3, 3, 2, '2023-03-05', '2023-03-12'),
(4, 4, 2, '2023-03-15', '2023-03-22'),
(5, 1, 3, '2023-03-06', '2023-03-13'),
(6, 2, 3, '2023-03-20', '2023-03-27'),
(7, 3, 4, '2023-04-13', '2023-04-20'),
(8, 4, 4, '2023-04-25', '2023-05-02'),
(9, 2, 4, '2023-05-10', '2023-05-17'),
(10, 3, 4, '2023-05-20', '2023-05-27');

---------------------------------------------------------
-SELECT m.MemberID, m.FirstName, m.LastName, m.Email, m.JoinDate
FROM Members m
JOIN BorrowedBooks b ON m.MemberID = b.MemberID
WHERE m.JoinDate > '2023-01-01'
GROUP BY m.MemberID
HAVING COUNT(b.BorrowID) > 3
AND m.Email NOT LIKE '%@example.com'
ORDER BY m.LastName ASC;

Task4:

-SELECT 
MIN(b.price) AS MinPrice,
MAX(b.price) AS MaxPrice
FROM 
members m 
JOIN
borrowedbooks bb ON m.MemberID = bb.MemberID
JOIN
books b ON bb.BookID = b.BookID
WHERE
m.JoinDate > '2023-01-01'
---------------------------------------------------------
-SELECT 
    COUNT(bb.BorrowID) AS TotalBooksBorrowed,
    AVG(b.Price) AS AveragePrice,
    SUM(b.Price) AS TotalPrice
FROM 
    Members m
JOIN 
    BorrowedBooks bb ON m.MemberID = bb.MemberID
JOIN 
    Books b ON bb.BookID = b.BookID
WHERE 
    m.JoinDate > '2023-01-01';

---------------------------------------------------------
-SELECT * FROM `Members` 
WHERE LastName LIKE 'j%';
----------------------------------------------------------
- SELECT 
    m.MemberID,
    m.FirstName,
    m.LastName,
    COUNT(bb.BorrowID) AS BooksBorrowed
FROM 
    Members m
JOIN 
    BorrowedBooks bb ON m.MemberID = bb.MemberID
GROUP BY 
    m.MemberID, m.FirstName, m.LastName;
----------------------------------------------------------
- SELECT 
    m.MemberID,
    m.FirstName,
    m.LastName,
    b.Title AS BookTitle
FROM 
    Members m
JOIN 
    BorrowedBooks bb ON m.MemberID = bb.MemberID
JOIN 
    Books b ON bb.BookID = b.BookID;


